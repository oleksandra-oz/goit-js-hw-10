{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport iziToast from 'izitoast';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('#startBtn');\nconst timerFields = document.querySelectorAll('.timer .value');\n\nlet userSelectedDate = null;\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    userSelectedDate = selectedDates[0];\n    if (userSelectedDate <= new Date()) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n      startBtn.disabled = true;\n    } else {\n      startBtn.disabled = false;\n    }\n  },\n};\n\nflatpickr(input, options);\n\nfunction updateTimerDisplay({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = addLeadingZero(days);\n  document.querySelector('[data-hours]').textContent = addLeadingZero(hours);\n  document.querySelector('[data-minutes]').textContent = addLeadingZero(minutes);\n  document.querySelector('[data-seconds]').textContent = addLeadingZero(seconds);\n}\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  input.disabled = true;\n\n  const interval = setInterval(() => {\n    const currentTime = new Date();\n    const timeRemaining = userSelectedDate - currentTime;\n\n    if (timeRemaining <= 0) {\n      clearInterval(interval);\n      updateTimerDisplay({ days: 0, hours: 0, minutes: 0, seconds: 0 });\n      iziToast.success({\n        title: 'Done!',\n        message: 'The countdown is finished.',\n      });\n      startBtn.disabled = true;\n      input.disabled = false;\n    } else {\n      const timeData = convertMs(timeRemaining);\n      updateTimerDisplay(timeData);\n    }\n  }, 1000);\n});\n"],"names":["input","startBtn","userSelectedDate","addLeadingZero","value","convertMs","ms","days","hours","minutes","seconds","options","selectedDates","iziToast","flatpickr","updateTimerDisplay","interval","timeRemaining","timeData"],"mappings":"0IAKA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,WAAW,EAC/B,SAAS,iBAAiB,eAAe,EAE7D,IAAIC,EAAmB,KAEvB,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrBV,EAAmBU,EAAc,CAAC,EAC9BV,GAAoB,IAAI,MAC1BW,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EACDZ,EAAS,SAAW,IAEpBA,EAAS,SAAW,EAEvB,CACH,EAEAa,EAAUd,EAAOW,CAAO,EAExB,SAASI,EAAmB,CAAE,KAAAR,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC7D,SAAS,cAAc,aAAa,EAAE,YAAcP,EAAeI,CAAI,EACvE,SAAS,cAAc,cAAc,EAAE,YAAcJ,EAAeK,CAAK,EACzE,SAAS,cAAc,gBAAgB,EAAE,YAAcL,EAAeM,CAAO,EAC7E,SAAS,cAAc,gBAAgB,EAAE,YAAcN,EAAeO,CAAO,CAC/E,CAEAT,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBD,EAAM,SAAW,GAEjB,MAAMgB,EAAW,YAAY,IAAM,CAEjC,MAAMC,EAAgBf,EADF,IAAI,KAGxB,GAAIe,GAAiB,EACnB,cAAcD,CAAQ,EACtBD,EAAmB,CAAE,KAAM,EAAG,MAAO,EAAG,QAAS,EAAG,QAAS,CAAC,CAAE,EAChEF,EAAS,QAAQ,CACf,MAAO,QACP,QAAS,4BACjB,CAAO,EACDZ,EAAS,SAAW,GACpBD,EAAM,SAAW,OACZ,CACL,MAAMkB,EAAWb,EAAUY,CAAa,EACxCF,EAAmBG,CAAQ,CAC5B,CACF,EAAE,GAAI,CACT,CAAC"}